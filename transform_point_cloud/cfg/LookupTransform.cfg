#!/usr/bin/env python
PACKAGE = "transform_point_cloud"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("enable", bool_t, 0, "enable the transform", True)
gen.add("target_frame", str_t, 0,
        "First parameter in lookupTransform(), the new frame_id of the output point cloud, set blank to use the input point cloud frame_id",
        "map")
gen.add("source_frame", str_t, 0,
        "Second parameter in lookupTransform(), leave blank to use the input point cloud frame_id, which will leave the output cloud coordinates the same in world coordinates/as viewed in rviz",
        "")
gen.add("timeout", double_t,    0, "lookup timeout",  1.0, 0.0, 10.0)
gen.add("offset_lookup_time", double_t,    0, "Offset the lookup from point cloud time",  0, -10.0, 10.0)
# gen.add("offset_output_time", double_t,    0, "Offset the time from the lookup transform results",  0, -10.0, 10.0)
# TODO(lwalter) output frame_id - override the frame id on the output point cloud
gen.add("scale_x", double_t, 2, "Scale the x of each point", 1.0, -10000.0, 10000.0)
gen.add("scale_y", double_t, 2, "Scale the y of each point", 1.0, -10000.0, 10000.0)
gen.add("scale_z", double_t, 2, "Scale the z of each point", 1.0, -10000.0, 10000.0)
# gen.add("offset_output_time", double_t,    0, "Offset the time from the lookup transform results",  0, -10.0, 10.0)

exit(gen.generate(PACKAGE, "transform_point_cloud", "LookupTransform"))
